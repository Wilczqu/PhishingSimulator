{"ast":null,"code":"var _jsxFileName = \"C:\\\\College work\\\\PythonPhishingSimulator\\\\phishing-simulator-frontend\\\\src\\\\components\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// src/components/Register.jsx\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = ({\n  onRegister,\n  message\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Clear previous message if needed\n\n    try {\n      // Here you would typically call your backend API to register the user.\n      // For example, using fetch or axios:\n      // const response = await axios.post('/api/register', { username, password });\n      // Assume registration is successful if no error is thrown.\n\n      // After successful registration, redirect to /login and pass a success flag:\n      navigate('/login', {\n        state: {\n          registrationSuccess: true\n        }\n      });\n    } catch (err) {\n      console.error(err);\n      // Optionally set an error message state to display registration errors.\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        placeholder: \"Username\",\n        required: true,\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","useNavigate","jsxDEV","_jsxDEV","Register","onRegister","message","_s","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","state","registrationSuccess","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","name","placeholder","required","value","onChange","target","to","_c","$RefreshReg$"],"sources":["C:/College work/PythonPhishingSimulator/phishing-simulator-frontend/src/components/Register.jsx"],"sourcesContent":["// src/components/Register.jsx\r\nimport React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst Register = ({ onRegister, message }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Clear previous message if needed\r\n\r\n    try {\r\n      // Here you would typically call your backend API to register the user.\r\n      // For example, using fetch or axios:\r\n      // const response = await axios.post('/api/register', { username, password });\r\n      // Assume registration is successful if no error is thrown.\r\n      \r\n      // After successful registration, redirect to /login and pass a success flag:\r\n      navigate('/login', { state: { registrationSuccess: true } });\r\n    } catch (err) {\r\n      console.error(err);\r\n      // Optionally set an error message state to display registration errors.\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Register</h2>\r\n      {message && <p style={{ color: 'red' }}>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          required\r\n          value={username}\r\n          onChange={e => setUsername(e.target.value)}\r\n        />\r\n        <input \r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      <p>Already have an account? <Link to=\"/login\">Login here</Link></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}