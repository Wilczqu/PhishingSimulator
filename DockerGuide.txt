# Phishing Simulator - Setup Instructions

## Prerequisites
- Docker Desktop installed and running
- Git installed
- Node.js installed (version 23 or higher)
- Visual Studio Code (recommended)

## Clone and Setup

1. Clone the repository:
```powershell
git clone https://github.com/Wilczqu/PhishingSimulator.git
cd PhishingSimulator
```

2. Create `.env` file in the project root:
```plaintext
DB_USER=postgres
DB_PASSWORD=postgres
DB_NAME=phishingdb
DB_HOST=db
PORT=5050
```

3. Create backend `.env` in the backend folder:
```plaintext
DB_USER=postgres
DB_PASSWORD=postgres
DB_NAME=phishingdb
DB_HOST=db
PORT=5050
```

## Start the Application

1. Build and start containers:
```powershell
docker-compose down -v  # Clean up any existing containers
docker system prune -f  # Remove unused Docker resources
docker-compose up --build
```

2. Wait for the services to start:
   - Database will initialize on port 5432
   - Backend API will start on port 5050
   - Frontend will be available on port 3000

3. Access the application:
   - Frontend: http://localhost:3000
   - Backend API: http://localhost:5050
   - Database: localhost:5432

## Troubleshooting

If you encounter any issues:

1. Check Docker logs:
```powershell
docker-compose logs
```

2. Rebuild from scratch:
```powershell
docker-compose down -v
docker system prune -f
Remove-Item -Recurse -Force .\phishing-simulator-backend\node_modules -ErrorAction SilentlyContinue
docker-compose up --build
```

3. Verify ports are available:
```powershell
netstat -ano | findstr "5432"
netstat -ano | findstr "5050"
netstat -ano | findstr "3000"
```

4. Common issues:
   - If bcrypt fails to build, try removing node_modules and rebuilding
   - If ports are in use, stop conflicting services or change ports in docker-compose.yml
   - If database fails to initialize, check PostgreSQL logs using `docker-compose logs db`

The application should now be running and accessible through your browser.