# filepath: c:\PhishingSimulator\PhishingSimulator\docker-compose.yml
services:
  db:
    image: postgres:17-alpine
    container_name: phishing-simulator-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-phishingdb}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./phishing-simulator-backend
    container_name: phishing-simulator-backend
    restart: unless-stopped
    ports:
      - "8050:5050"
    environment:
      DB_HOST: db
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-phishingdb}
      DB_PORT: 5432
      PORT: 5050
      NODE_ENV: development
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build: ./phishing-simulator-frontend
    container_name: phishing-simulator-frontend
    restart: unless-stopped
    ports:
      - "3000:80"  # Map host port 3000 to container port 80 (Nginx)
    environment:
      # Use backend service name instead of localhost
      REACT_APP_API_URL: http://backend:8050
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local